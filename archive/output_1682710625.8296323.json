{"content": {"suites": {"0": {"status": {"total_pass": 2, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 1, "total_error": 5}, "tests": {"0": {"status": "ERROR", "message": "@pytest.fixture()\n    def make_files():\n        list_off_files = [ ]\n        for i in range(data[\"count\"]):\n            filename = ''.join(random.choices(string.ascii_uppercase + string.digits, k=5))\n>           if checkout(\"cd {}; dd if=/dev/urandom of={} bs={} count=1 iflag=fullblock\".format(data[\"folder_in\"], filename, data[\"bs\"]), \"\"):\nE           KeyError: 'bs'\n\nconftest.py:23: KeyError\n", "test_name": "test_step1", "rerun": "0"}, "1": {"status": "ERROR", "message": "@pytest.fixture()\n    def make_files():\n        list_off_files = [ ]\n        for i in range(data[\"count\"]):\n            filename = ''.join(random.choices(string.ascii_uppercase + string.digits, k=5))\n>           if checkout(\"cd {}; dd if=/dev/urandom of={} bs={} count=1 iflag=fullblock\".format(data[\"folder_in\"], filename, data[\"bs\"]), \"\"):\nE           KeyError: 'bs'\n\nconftest.py:23: KeyError\n", "test_name": "test_step2", "rerun": "0"}, "2": {"status": "FAIL", "message": "   AssertionError: test3 FAIL\n   assert False\n    +  where False = checkout('cd /home/zerg/out; 7z t arx.7z', 'Everything is Ok')\n    +    where 'cd /home/zerg/out; 7z t arx.7z' = <built-in method format of str object at 0x7f95626d12f0>('/home/zerg/out')\n    +      where <built-in method format of str object at 0x7f95626d12f0> = 'cd {}; 7z t arx.7z'.format\n", "test_name": "test_step3", "rerun": "0"}, "3": {"status": "PASS", "message": "", "test_name": "test_step4", "rerun": "0"}, "4": {"status": "ERROR", "message": "@pytest.fixture()\n    def make_files():\n        list_off_files = [ ]\n        for i in range(data[\"count\"]):\n            filename = ''.join(random.choices(string.ascii_uppercase + string.digits, k=5))\n>           if checkout(\"cd {}; dd if=/dev/urandom of={} bs={} count=1 iflag=fullblock\".format(data[\"folder_in\"], filename, data[\"bs\"]), \"\"):\nE           KeyError: 'bs'\n\nconftest.py:23: KeyError\n", "test_name": "test_step5", "rerun": "0"}, "5": {"status": "ERROR", "message": "@pytest.fixture()\n    def make_files():\n        list_off_files = [ ]\n        for i in range(data[\"count\"]):\n            filename = ''.join(random.choices(string.ascii_uppercase + string.digits, k=5))\n>           if checkout(\"cd {}; dd if=/dev/urandom of={} bs={} count=1 iflag=fullblock\".format(data[\"folder_in\"], filename, data[\"bs\"]), \"\"):\nE           KeyError: 'bs'\n\nconftest.py:23: KeyError\n", "test_name": "test_step6", "rerun": "0"}, "6": {"status": "PASS", "message": "", "test_name": "test_step7", "rerun": "0"}, "7": {"status": "ERROR", "message": "@pytest.fixture()\n    def make_files():\n        list_off_files = [ ]\n        for i in range(data[\"count\"]):\n            filename = ''.join(random.choices(string.ascii_uppercase + string.digits, k=5))\n>           if checkout(\"cd {}; dd if=/dev/urandom of={} bs={} count=1 iflag=fullblock\".format(data[\"folder_in\"], filename, data[\"bs\"]), \"\"):\nE           KeyError: 'bs'\n\nconftest.py:23: KeyError\n", "test_name": "test_step8", "rerun": "0"}}, "suite_name": "test_1.py"}}}, "date": "April 28, 2023", "start_time": 1682710581.0455098, "total_suite": 1, "status": "FAIL", "status_list": {"pass": "2", "fail": "1", "skip": "0", "error": "5", "xpass": "0", "xfail": "0", "rerun": "0"}, "total_tests": "8"}